//C语言广泛应用于底层开发
//C / C++是编译型语言
//编辑器：只有编辑功能
//“.c”为后缀的文件叫“源文件”
//“.h”为后缀的文件叫“头文件”
//添加新项目的时候后缀应该为“.c”, 如果后缀是”.cpp”编译器会按照C++的语法来编译代码

# include<stdio.h>	/*必须包含头文件*/
//stdio.h 是头文件，std代表 standard 标准，i代表 input 输入，o代表 output 输出

#define _CRT_SECURE_NO_WARNINGS   //解决scanf返回值忽略的问题,只有VS编译器有这个问题

int main()
//int 代表：整型类型
//C语言代码中一定要有main函数，主函数
//C语言规定，main函数是函数的入口，有且只有一个
{
	printf("Hello World!");	//每个语句后必须要用 ;
	// printf 是一个库函数，专门用来打印数据
	return 0;
}

//Ctrl + F5 快速运行代码

// 这种注释方法只能注释一行

/*

	这种注释方法可以注释多行

*/

//计算机中的单位;
//8 Bit = 1 Byte
//1024 Byte = 1 Kb
//1024 Kb = 1 Mb
//1024 Mb = 1 Gb
//1024 Gb = 1 Tb
//1024 Tb = 1 Pb

//计算机上的存储设备（按速度由高到低，空间由小到大排列）：
//寄存器(集成到CPU上)
//高速缓存(cache)
//内存
//硬盘


//数据类型
//char，字符型,占1个字节,例：char ch1 = '1 '
//short，短整型,占2个字节,例：short int a = 2
//int，整型,例：int c = 55
	// int 在32位系统下占 4 个字节，在16位系统下占 2 个字节
//float，单精度浮点数,占4个字节,例：float a = 3.8f
	// “3.8f”后面加上f 来修饰 float 类型。如果不加，编译器默认是 double 类型的
//double，双精度浮点数,占8个字节,精度更高,例：double a = 1.22
//long，长整型
//long long，更长的整型

//变量
// 变量分为：
//局部变量 - 在{ }内部定义的变量
	// 局部变量的作用域是局部变量所在的局部范围
	// 局部变量的生命周期是进入作用域生命周期开始，出作用域生命周期结束
//全局变量 - 在{ }外部定义的变量
	// 全局变量的作用域是整个工程
	// 全局变量的生命周期是整个程序的生命周期

	//在全局变量和局部变量名字相同的情况下，局部优先
	//建议全局变量和局部变量的名字不要相同

//常见关键字：
//define 不是关键字，是一个预处理指令
//auto
//break
//case
//char
//const 常属性，它修饰的变量是可读的，不可修改值。也可以修饰指针
//continue
//default
//do
//double
//else
//enum 枚举
//extern 声明外部符号
//float
//for
//goto
//if
//int
//long
//sizeof 测量多少字节，Byte
	//printf("%d\n", sizeof(int));       输出 4
	//C语言规定，只要sizeof(long) >= sizeof(int)就可以
//typedef 给一个已有的类型重命名
	//例如： typedef int size; 定义了一个int的同义字size,你可以在任何需要int的上下文中使用size	


// C语言中的整数类型有两种：有符号整数和无符号整数。
	// 有符号整数可以表示正数、负数和零。可以用关键字 signed 修饰(一般不写，默认就是 有符号)
	// 而无符号整数只能表示正数和零。可以用关键字 unsigned 修饰

// 关键字 void 是用来修饰函数的参数或返回值,代表函数没有参数或返回值。它不能定义变量。

// 关键字 register 是寄存器的意思，用它修饰的变量是寄存器变量。建议(不一定真的会)编译器把 变量 存放在寄存器中
	// 一般来说，变量存在内存里。寄存器取数据比内存快，只能修饰整形和字符型，且不能对其取地址


//return 函数返回值
//short
//signed 有符号的
//sizeof 计算大小

//static 静态的，放在静态区里
//1.修饰局部变量，例
//void test()
//{
//	static int a = 1;
//	a++;
//	printf("%d\n", a);正常输出 10 个 2
//		//用 static 修饰 a 后，输出 2 3 4 5 6 7 8 9 10 11。
//		//因为 static 用来修饰局部变量时，局部变量出作用域也不销毁。
//		//影响了变量的生命周期，使变量的生命周期和程序一样，本质上是改变了变量的存储位置。
//}
//int main()
//{
//	int i = 0;
//	while (i < 10)
//	{
//		test();
//		i++;
//	}
//	return 0;
//}
// 2.修饰全局变量时，全局变量的外部链接属性会变成内部链接属性。其他源文件(.c)就不能再使用这个全局变量。
//3.修饰函数时，函数的外部链接属性会变成内部链接属性。其他源文件(.c)就不能再使用这个全局变量。

//switch
//struct 结构体


//union 联合体(共用体)
//unsigned 无符号的
//void 无(一般会用在函数的返回类型，函数参数) 不需要返回
//volatile
//while

//#define 定义标识符常量
//例，#define NUM 100
//#define 定义宏(宏有参数)


//变量的命名规则：
//1.有意义，规范
//2.名字必须是字母、数字、下划线组成，不能有特殊字符且不能以数字开头
//3.不能是关键字

//常量:

//转义字符:
//		\? 在书写连续多个问号时使用，防止他们被解析成三字母词(现在已经消失)
//		\' 用于表示字符常量`
//		\" 用于表示一个字符产内部的双引号
//		\\ 用于表示一个反斜杠，防止它被解释为一个转义序列符
//		\a 警告字符，蜂鸣
//		\b 退格符
//		\f 进纸符
//		\n 换行
//		\r 回车
//		\t 水平制表符
//		\v 垂直制表符
//		\ddd ddd表示1~3个八进制的数字。如：\130 表示 X
//		\xdd dd表示2个十六进制数字。如: \x30 表示 0

//		%d - 打印整型
//		%c - 打印字符
//		%s - 打印字符串
//		%f - 打印float类型
//		%lf - 打印double类型
//		%zu - 打印sizeof的返回值


//字符串
	// C语言中没有字符串类型，类似 "sdfadgada" 由双引号引起来的一串字符称为字符串字面值
	//字符串的结束标志是一个 \0 的转义字符，在计算字符长度的时候 \0 是结束标志，不算字符内容
